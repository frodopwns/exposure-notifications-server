{{- if .Values.federation }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: federationin
  labels:
    component: federationin
    app: exposure-notifications-server
spec:
  replicas: 1
  selector:
    matchLabels:
      component: federationin
      app: exposure-notifications-server
  template:
    metadata:
      labels:
        component: federationin
        app: exposure-notifications-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: federationin
        image: {{ .Values.image.registry }}/federationin:{{ .Values.image.tag }}
        pullPolicy: {{ .Values.image.pull_policy }}
        ports:
          - containerPort: 8080
        env:
          - name: PORT
            value: "8080"
          - name: OBSERVABILITY_EXPORTER
            value: {{ .Values.observability_exporter.type }}
          - name: RPC_TIMEOUT
            value: "10m"
          - name: TRUNCATE_WINDOW
            value: "1h"
          - name: TLS_SKIP_VERIFY
            value: "false"
          - name: TLS_CERT_FILE
            value: ""
          - name: CREDENTIALS_FILE
            value: ""
          # database
          - name: DB_NAME
            value: {{ .Values.database.db_name }}
{{- if and .Values.database.aso .Values.database.aso.psql }}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.aso.psql.server_name }}
                key: fullyQualifiedUsername
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.aso.psql.server_name }}
                key: fullyQualifiedServerName
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.aso.psql.server_name }}
                key: password
{{- end }}
          - name: DB_PORT
            value: "5432"
          - name: DB_SSLMODE
            value: "require"
          - name: DB_CONNECT_TIMEOUT
            value: "30"
          - name: DB_SSLCERT
            value: ""
          - name: DB_SSLKEY
            value: ""
          - name: DB_SSLROOTCERT
            value: ""
          - name: DB_POOL_MIN_CONNS
            value: ""
          - name: DB_POOL_MAX_CONNS
            value: ""
          # - name: DB_POOL_MAX_CONN_LIFETIME
          #   value: ""
          # - name: DB_POOL_MAX_CONN_IDLE_TIME
          #   value: ""
          # - name: DB_POOL_HEALTH_CHECK_PERIOD
          #   value: ""
          # secrets
          - name: SECRET_MANAGER
            value: {{ .Values.secrets_management.type }}
{{- if ne .Values.azure.service_principal_secret "" }}
          - name: AZURE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: AZURE_CLIENT_ID
                name: {{ .Values.azure.service_principal_secret }}
                optional: true
          - name: AZURE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: AZURE_CLIENT_SECRET
                name: {{ .Values.azure.service_principal_secret }}
                optional: true
          - name: AZURE_TENANT_ID
            valueFrom:
              secretKeyRef:
                key: AZURE_TENANT_ID
                name: {{ .Values.azure.service_principal_secret }}
          - name: AZURE_SUBSCRIPTION_ID
            valueFrom:
              secretKeyRef:
                key: AZURE_SUBSCRIPTION_ID
                name: {{ .Values.azure.service_principal_secret }}
{{- end }}
{{- end }}
