{{- if .Values.migrate }}
apiVersion: batch/v1
kind: Job
metadata:
  name: migrate
  labels:
    component: migrate
    app: exposure-notifications-server
spec:
  template:
    spec:
      containers:
      - name: migrate
        image: {{ .Values.image.registry }}/migrate:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pull_policy | quote }}
        command: ["sh", "-c"]
        args:
        # escape the entire connection string so that special characters are handled and pass to the migrate command.
          - CONN_STRING=$(echo -n "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}" | hexdump -v -e '/1 "%02x"' | sed 's/\(..\)/%\1/g') /usr/local/bin/migrate -database ${CONN_STRING} -path migrations up
        env:
          - name: DB_NAME
            value: {{ .Values.database.db_name | quote }}
{{- if and .Values.database.aso .Values.database.aso.psql }}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.aso.psql.server_name | quote }}
                key: fullyQualifiedUsername
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.aso.psql.server_name | quote }}
                key: fullyQualifiedServerName
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.aso.psql.server_name | quote }}
                key: password
{{- end }}
          - name: DB_PORT
            value: "5432"
          - name: DB_SSLMODE
            value: "require"
          - name: DB_CONNECT_TIMEOUT
            value: "30"
      restartPolicy: Never
  backoffLimit: 4
{{- end }}
